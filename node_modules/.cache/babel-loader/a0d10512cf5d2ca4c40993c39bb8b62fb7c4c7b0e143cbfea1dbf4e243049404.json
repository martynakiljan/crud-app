{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"className\", \"children\", \"inset\", \"orientation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport Divider from '../Divider/Divider';\nimport { getListDividerUtilityClass } from './listDividerClasses';\nimport RowListContext from '../List/RowListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const slots = {\n    root: ['root',\n    // `insetContext` class is already produced by Divider\n    ownerState.inset && ownerState.inset !== 'context' && `inset${capitalize(ownerState.inset)}`]\n  };\n  return composeClasses(slots, getListDividerUtilityClass, {});\n};\nconst ListDividerRoot = styled(Divider, {\n  name: 'JoyListDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  return _extends({}, ownerState.inset === 'context' && {\n    '--Divider-inset': 'calc(-1 * var(--List-padding))'\n  }, ownerState.row && _extends({\n    marginInline: 'var(--List-divider-gap)'\n  }, ownerState.inset === 'gutter' && {\n    marginBlock: 'var(--List-item-paddingY)'\n  }, ownerState['data-first-child'] === undefined && {\n    // combine --List-gap and --List-divider-gap to replicate flexbox gap behavior\n    marginInlineStart: 'calc(var(--List-gap) + var(--List-divider-gap))'\n  }), !ownerState.row && _extends({}, ownerState['data-first-child'] === undefined && {\n    // combine --List-gap and --List-divider-gap to replicate flexbox gap behavior\n    marginBlockStart: 'calc(var(--List-gap) + var(--List-divider-gap))'\n  }, {\n    marginBlockEnd: 'var(--List-divider-gap)'\n  }, ownerState.inset === 'gutter' && {\n    marginInlineStart: 'var(--List-item-paddingLeft)',\n    marginInlineEnd: 'var(--List-item-paddingRight)'\n  }, ownerState.inset === 'startDecorator' && {\n    marginInlineStart: 'var(--List-item-paddingLeft)'\n  }, ownerState.inset === 'startContent' && {\n    marginInlineStart: 'calc(var(--List-item-paddingLeft) + var(--List-decorator-size))'\n  }));\n});\nconst ListDivider = /*#__PURE__*/React.forwardRef(function ListDivider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyListDivider'\n  });\n  const row = React.useContext(RowListContext);\n  const {\n      component = 'li',\n      className,\n      children,\n      inset = 'context',\n      orientation = row ? 'vertical' : 'horizontal'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    inset,\n    row,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListDividerRoot\n  // @ts-ignore\n  , _extends({\n    ref: ref\n  }, inset === 'context' && {\n    inset\n  }, {\n    component: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    orientation: orientation\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListDivider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The empty space on the side(s) of the divider in a vertical list.\n   *\n   * For horizontal list (the nearest parent List has `row` prop set to `true`), only `inset=\"gutter\"` affects the list divider.\n   */\n  inset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['gutter', 'startDecorator', 'startContent']), PropTypes.string]),\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListDivider;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_capitalize","capitalize","composeClasses","styled","useThemeProps","Divider","getListDividerUtilityClass","RowListContext","jsx","_jsx","useUtilityClasses","ownerState","slots","root","inset","ListDividerRoot","name","slot","overridesResolver","props","styles","row","marginInline","marginBlock","undefined","marginInlineStart","marginBlockStart","marginBlockEnd","marginInlineEnd","ListDivider","forwardRef","inProps","ref","useContext","component","className","children","orientation","other","classes","process","env","NODE_ENV","propTypes","node","object","string","elementType","oneOfType","oneOf","sx","arrayOf","func","bool"],"sources":["/Users/martyna.kiljan/Documents/projects/crrud/crud-app/node_modules/@mui/joy/ListDivider/ListDivider.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"className\", \"children\", \"inset\", \"orientation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport Divider from '../Divider/Divider';\nimport { getListDividerUtilityClass } from './listDividerClasses';\nimport RowListContext from '../List/RowListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const slots = {\n    root: ['root',\n    // `insetContext` class is already produced by Divider\n    ownerState.inset && ownerState.inset !== 'context' && `inset${capitalize(ownerState.inset)}`]\n  };\n  return composeClasses(slots, getListDividerUtilityClass, {});\n};\nconst ListDividerRoot = styled(Divider, {\n  name: 'JoyListDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => _extends({}, ownerState.inset === 'context' && {\n  '--Divider-inset': 'calc(-1 * var(--List-padding))'\n}, ownerState.row && _extends({\n  marginInline: 'var(--List-divider-gap)'\n}, ownerState.inset === 'gutter' && {\n  marginBlock: 'var(--List-item-paddingY)'\n}, ownerState['data-first-child'] === undefined && {\n  // combine --List-gap and --List-divider-gap to replicate flexbox gap behavior\n  marginInlineStart: 'calc(var(--List-gap) + var(--List-divider-gap))'\n}), !ownerState.row && _extends({}, ownerState['data-first-child'] === undefined && {\n  // combine --List-gap and --List-divider-gap to replicate flexbox gap behavior\n  marginBlockStart: 'calc(var(--List-gap) + var(--List-divider-gap))'\n}, {\n  marginBlockEnd: 'var(--List-divider-gap)'\n}, ownerState.inset === 'gutter' && {\n  marginInlineStart: 'var(--List-item-paddingLeft)',\n  marginInlineEnd: 'var(--List-item-paddingRight)'\n}, ownerState.inset === 'startDecorator' && {\n  marginInlineStart: 'var(--List-item-paddingLeft)'\n}, ownerState.inset === 'startContent' && {\n  marginInlineStart: 'calc(var(--List-item-paddingLeft) + var(--List-decorator-size))'\n})));\nconst ListDivider = /*#__PURE__*/React.forwardRef(function ListDivider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyListDivider'\n  });\n  const row = React.useContext(RowListContext);\n  const {\n      component = 'li',\n      className,\n      children,\n      inset = 'context',\n      orientation = row ? 'vertical' : 'horizontal'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    inset,\n    row,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListDividerRoot\n  // @ts-ignore\n  , _extends({\n    ref: ref\n  }, inset === 'context' && {\n    inset\n  }, {\n    component: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    orientation: orientation\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListDivider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The empty space on the side(s) of the divider in a vertical list.\n   *\n   * For horizontal list (the nearest parent List has `row` prop set to `true`), only `inset=\"gutter\"` affects the list divider.\n   */\n  inset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['gutter', 'startDecorator', 'startContent']), PropTypes.string]),\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListDivider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}