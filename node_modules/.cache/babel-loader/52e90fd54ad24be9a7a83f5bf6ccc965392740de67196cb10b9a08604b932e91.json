{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({}, ownerState.size === 'sm' && _extends({\n    '--Badge-minHeight': '0.5rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1rem'\n  }, {\n    '--Badge-paddingX': '0.25rem',\n    fontSize: theme.vars.fontSize.xs\n  }), ownerState.size === 'md' && _extends({\n    '--Badge-minHeight': '0.75rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.25rem'\n  }, {\n    '--Badge-paddingX': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }), ownerState.size === 'lg' && _extends({\n    '--Badge-minHeight': '1rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.5rem'\n  }, {\n    '--Badge-paddingX': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }), {\n    '--Badge-ringSize': '2px',\n    '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  });\n});\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'top' ? '0%' : '100%';\n  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'left' ? '0%' : '100%';\n  return _extends({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: 1,\n    padding: 'calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth, 0px)) calc(var(--Badge-paddingX) - var(--variant-borderWidth, 0px))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: 1,\n    transition: 'transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, ownerState.invisible && {\n    transition: 'transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      badgeInset: badgeInsetProp = 0,\n      children,\n      size: sizeProp = 'md',\n      color: colorProp = 'primary',\n      invisible: invisibleProp = false,\n      max = 99,\n      badgeContent: badgeContentProp = '',\n      showZero = false,\n      variant: variantProp = 'solid'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n  const {\n    color: internalColor = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, internalColor);\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_capitalize","capitalize","usePreviousProps","unstable_composeClasses","composeClasses","styled","useThemeProps","useColorInversion","useSlot","badgeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","variant","size","anchorOrigin","invisible","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","theme","badgeContent","fontSize","vars","xs","sm","md","palette","background","surface","position","display","verticalAlign","flexShrink","BadgeBadge","_ownerState$anchorOri","_ownerState$anchorOri2","_ownerState$anchorOri3","_ownerState$anchorOri4","_theme$variants","inset","top","badgeInset","left","bottom","right","insetValues","split","length","translateY","translateX","transformOriginY","transformOriginX","flexWrap","justifyContent","alignContent","alignItems","boxSizing","boxShadow","fontFamily","body","fontWeight","lineHeight","padding","minHeight","minWidth","borderRadius","zIndex","transition","backgroundColor","transform","transformOrigin","variants","Badge","forwardRef","inProps","ref","anchorOriginProp","badgeInsetProp","children","sizeProp","colorProp","invisibleProp","max","badgeContentProp","showZero","variantProp","other","prevProps","internalColor","getColor","classes","displayValue","Number","SlotRoot","rootProps","className","elementType","externalForwardedProps","SlotBadge","badgeProps","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","oneOfType","number","string","bool","sx","arrayOf","func","object"],"sources":["/Users/martyna.kiljan/Documents/projects/crrud/crud-app/node_modules/@mui/joy/Badge/Badge.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.size === 'sm' && _extends({\n  '--Badge-minHeight': '0.5rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1rem'\n}, {\n  '--Badge-paddingX': '0.25rem',\n  fontSize: theme.vars.fontSize.xs\n}), ownerState.size === 'md' && _extends({\n  '--Badge-minHeight': '0.75rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.25rem'\n}, {\n  '--Badge-paddingX': '0.375rem',\n  fontSize: theme.vars.fontSize.sm\n}), ownerState.size === 'lg' && _extends({\n  '--Badge-minHeight': '1rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.5rem'\n}, {\n  '--Badge-paddingX': '0.5rem',\n  fontSize: theme.vars.fontSize.md\n}), {\n  '--Badge-ringSize': '2px',\n  '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n}));\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(({\n  theme,\n  ownerState\n}) => {\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'top' ? '0%' : '100%';\n  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'left' ? '0%' : '100%';\n  return _extends({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: 1,\n    padding: 'calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth, 0px)) calc(var(--Badge-paddingX) - var(--variant-borderWidth, 0px))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: 1,\n    transition: 'transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, ownerState.invisible && {\n    transition: 'transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      badgeInset: badgeInsetProp = 0,\n      children,\n      size: sizeProp = 'md',\n      color: colorProp = 'primary',\n      invisible: invisibleProp = false,\n      max = 99,\n      badgeContent: badgeContentProp = '',\n      showZero = false,\n      variant: variantProp = 'solid'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n  const {\n    color: internalColor = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, internalColor);\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}