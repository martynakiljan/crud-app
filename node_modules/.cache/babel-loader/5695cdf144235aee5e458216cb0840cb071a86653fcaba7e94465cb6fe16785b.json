{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/SwitchUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', disabled && 'disabled'],\n    // disabled class is necessary for displaying global variant\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref3 => {\n  let {\n    ownerState,\n    theme\n  } = _ref3;\n  var _theme$variants$plain, _theme$variants$plain2, _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;\n  return _extends({\n    '--Icon-fontSize': 'var(--Checkbox-size)'\n  }, ownerState.size === 'sm' && {\n    '--Checkbox-size': '1rem',\n    '--Checkbox-gap': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--Checkbox-size': '1.25rem',\n    '--Checkbox-gap': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Checkbox-size': '1.5rem',\n    '--Checkbox-gap': '0.625rem',\n    fontSize: theme.vars.fontSize.lg\n  }, {\n    position: ownerState.overlay ? 'initial' : 'relative',\n    display: 'inline-flex',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: 'var(--Checkbox-size)',\n    color: theme.vars.palette.text.primary,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$variants$plain = theme.variants.plainDisabled) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain[ownerState.color]) == null ? void 0 : _theme$variants$plain2.color\n    }\n  }, ownerState.disableIcon && {\n    color: (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants2 = _theme$variants[ownerState.color]) == null ? void 0 : _theme$variants2.color,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : (_theme$variants4 = _theme$variants3[ownerState.color]) == null ? void 0 : _theme$variants4.color\n    }\n  });\n});\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(_ref4 => {\n  let {\n    theme,\n    ownerState\n  } = _ref4;\n  var _theme$variants5, _variantStyle$backgro, _theme$variants6, _theme$variants7, _theme$variants8;\n  const variantStyle = (_theme$variants5 = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants5[ownerState.color];\n  return [_extends({\n    boxSizing: 'border-box',\n    borderRadius: theme.vars.radius.xs,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0,\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface\n  }), {\n    '&:hover': (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]\n  }, {\n    '&:active': (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(_ref5 => {\n  let {\n    theme,\n    ownerState\n  } = _ref5;\n  var _theme$variants9, _theme$variants10, _theme$variants11, _theme$variants12;\n  return [{\n    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? 'var(--internal-action-radius, inherit)' : 'inherit'})`,\n    position: 'absolute',\n    top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    // clickable on the border and focus outline does not move when checked/unchecked\n    left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    zIndex: 1,\n    // The action element usually cover the area of nearest positioned parent\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    [theme.focus.selector]: theme.focus.default\n  }, ...(ownerState.disableIcon ? [(_theme$variants9 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants9[ownerState.color], {\n    '&:hover': (_theme$variants10 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants10[ownerState.color]\n  }, {\n    '&:active': (_theme$variants11 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants11[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants12 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants12[ownerState.color]\n  }] : [])];\n});\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(_ref6 => {\n  let {\n    ownerState\n  } = _ref6;\n  return _extends({\n    flex: 1,\n    minWidth: 0\n  }, ownerState.disableIcon ? {\n    zIndex: 1,\n    // label should stay on top of the action.\n    pointerEvents: 'none' // makes hover ineffect.\n  } : {\n    marginInlineStart: 'var(--Checkbox-gap)'\n  });\n});\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _ref, _inProps$disabled, _ref2, _inProps$size, _formControl$color;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant: variantProp,\n      size: sizeProp = 'md'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;\n  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, formControl != null && formControl.error ? 'danger' : (_formControl$color = formControl == null ? void 0 : formControl.color) != null ? _formControl$color : colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      required: required != null ? required : formControl == null ? void 0 : formControl.required,\n      'aria-describedby': formControl == null ? void 0 : formControl['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps: other,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]\n    })), label && /*#__PURE__*/_jsx(TypographyContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Checkbox;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_useId","useId","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","useSwitch","styled","useThemeProps","useColorInversion","useSlot","checkboxClasses","getCheckboxUtilityClass","CheckIcon","IndeterminateIcon","TypographyContext","FormControlContext","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","disableIcon","focusVisible","color","variant","size","slots","root","checkbox","action","input","label","CheckboxRoot","name","slot","overridesResolver","props","styles","theme","_theme$variants$plain","_theme$variants$plain2","_theme$variants","_theme$variants2","_theme$variants3","_theme$variants4","fontSize","vars","sm","md","lg","position","overlay","display","fontFamily","body","lineHeight","palette","text","primary","variants","plainDisabled","CheckboxCheckbox","_theme$variants5","_variantStyle$backgro","_theme$variants6","_theme$variants7","_theme$variants8","variantStyle","boxSizing","borderRadius","radius","xs","width","height","justifyContent","alignItems","flexShrink","transition","backgroundColor","background","surface","CheckboxAction","_theme$variants9","_theme$variants10","_theme$variants11","_theme$variants12","top","left","bottom","right","zIndex","focus","selector","default","CheckboxInput","margin","opacity","cursor","CheckboxLabel","flex","minWidth","pointerEvents","marginInlineStart","defaultCheckedIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","_ref","_inProps$disabled","_ref2","_inProps$size","_formControl$color","checkedProp","uncheckedIcon","checkedIcon","defaultChecked","disabledExternalProp","id","idOverride","indeterminate","indeterminateIcon","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","value","colorProp","variantProp","sizeProp","other","formControl","useContext","disabledProp","process","env","NODE_ENV","registerEffect","useEffect","undefined","htmlFor","useCheckboxProps","getInputProps","isCheckboxActive","activeVariant","inactiveVariant","getColor","error","activeColor","inactiveColor","classes","SlotRoot","rootProps","className","elementType","externalForwardedProps","SlotCheckbox","checkboxProps","SlotAction","actionProps","SlotInput","inputProps","additionalProps","getSlotProps","SlotLabel","labelProps","children","Provider","propTypes","bool","node","string","oneOfType","oneOf","func","sx","arrayOf","object","number"],"sources":["/Users/martyna.kiljan/Documents/projects/crrud/crud-app/node_modules/@mui/joy/Checkbox/Checkbox.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/SwitchUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', disabled && 'disabled'],\n    // disabled class is necessary for displaying global variant\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$variants$plain, _theme$variants$plain2, _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;\n  return _extends({\n    '--Icon-fontSize': 'var(--Checkbox-size)'\n  }, ownerState.size === 'sm' && {\n    '--Checkbox-size': '1rem',\n    '--Checkbox-gap': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--Checkbox-size': '1.25rem',\n    '--Checkbox-gap': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Checkbox-size': '1.5rem',\n    '--Checkbox-gap': '0.625rem',\n    fontSize: theme.vars.fontSize.lg\n  }, {\n    position: ownerState.overlay ? 'initial' : 'relative',\n    display: 'inline-flex',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: 'var(--Checkbox-size)',\n    color: theme.vars.palette.text.primary,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$variants$plain = theme.variants.plainDisabled) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain[ownerState.color]) == null ? void 0 : _theme$variants$plain2.color\n    }\n  }, ownerState.disableIcon && {\n    color: (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants2 = _theme$variants[ownerState.color]) == null ? void 0 : _theme$variants2.color,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : (_theme$variants4 = _theme$variants3[ownerState.color]) == null ? void 0 : _theme$variants4.color\n    }\n  });\n});\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants5, _variantStyle$backgro, _theme$variants6, _theme$variants7, _theme$variants8;\n  const variantStyle = (_theme$variants5 = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants5[ownerState.color];\n  return [_extends({\n    boxSizing: 'border-box',\n    borderRadius: theme.vars.radius.xs,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0,\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface\n  }), {\n    '&:hover': (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]\n  }, {\n    '&:active': (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants9, _theme$variants10, _theme$variants11, _theme$variants12;\n  return [{\n    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? 'var(--internal-action-radius, inherit)' : 'inherit'})`,\n    position: 'absolute',\n    top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    // clickable on the border and focus outline does not move when checked/unchecked\n    left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    zIndex: 1,\n    // The action element usually cover the area of nearest positioned parent\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    [theme.focus.selector]: theme.focus.default\n  }, ...(ownerState.disableIcon ? [(_theme$variants9 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants9[ownerState.color], {\n    '&:hover': (_theme$variants10 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants10[ownerState.color]\n  }, {\n    '&:active': (_theme$variants11 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants11[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants12 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants12[ownerState.color]\n  }] : [])];\n});\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  ownerState\n}) => _extends({\n  flex: 1,\n  minWidth: 0\n}, ownerState.disableIcon ? {\n  zIndex: 1,\n  // label should stay on top of the action.\n  pointerEvents: 'none' // makes hover ineffect.\n} : {\n  marginInlineStart: 'var(--Checkbox-gap)'\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _ref, _inProps$disabled, _ref2, _inProps$size, _formControl$color;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant: variantProp,\n      size: sizeProp = 'md'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;\n  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, formControl != null && formControl.error ? 'danger' : (_formControl$color = formControl == null ? void 0 : formControl.color) != null ? _formControl$color : colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      required: required != null ? required : formControl == null ? void 0 : formControl.required,\n      'aria-describedby': formControl == null ? void 0 : formControl['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps: other,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]\n    })), label && /*#__PURE__*/_jsx(TypographyContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Checkbox;"],"mappings":"AAAA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,MAAMC,SAAS,GAAG,CAAC,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;AAClS,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,IAAIC,KAAK,EAAEC,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AACvF,SAASC,uBAAuB,IAAIC,cAAc,QAAQ,WAAW;AACrE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,MAAM,EAAEC,aAAa,QAAQ,WAAW;AACjD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,eAAe,IAAIC,uBAAuB,QAAQ,mBAAmB;AAC5E,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,iBAAiB,MAAM,sCAAsC;AACpE,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,kBAAkB,MAAM,mCAAmC;AAClE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC,OAAO;IACPC,QAAQ;IACRC,WAAW;IACXC,YAAY;IACZC,KAAK;IACLC,OAAO;IACPC;EACF,CAAC,GAAGP,UAAU;EACd,MAAMQ,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAER,OAAO,IAAI,SAAS,EAAEC,QAAQ,IAAI,UAAU,EAAEE,YAAY,IAAI,cAAc,EAAEE,OAAO,IAAK,UAASzB,UAAU,CAACyB,OAAO,CAAE,EAAC,EAAED,KAAK,IAAK,QAAOxB,UAAU,CAACwB,KAAK,CAAE,EAAC,EAAEE,IAAI,IAAK,OAAM1B,UAAU,CAAC0B,IAAI,CAAE,EAAC,CAAC;IACjNG,QAAQ,EAAE,CAAC,UAAU,EAAET,OAAO,IAAI,SAAS,EAAEC,QAAQ,IAAI,UAAU,CAAC;IACpE;IACAS,MAAM,EAAE,CAAC,QAAQ,EAAEV,OAAO,IAAI,SAAS,EAAEE,WAAW,IAAID,QAAQ,IAAI,UAAU;IAC9E;IACAE,YAAY,IAAI,cAAc,CAAC;IAC/BQ,KAAK,EAAE,CAAC,OAAO,CAAC;IAChBC,KAAK,EAAE,CAAC,OAAO;EACjB,CAAC;EACD,OAAO9B,cAAc,CAACyB,KAAK,EAAElB,uBAAuB,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC;AACD,MAAMwB,YAAY,GAAG7B,MAAM,CAAC,MAAM,EAAE;EAClC8B,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,MAAM;EACZC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACV;AAC/C,CAAC,CAAC,CAAC,SAGG;EAAA,IAHF;IACFT,UAAU;IACVoB;EACF,CAAC;EACC,IAAIC,qBAAqB,EAAEC,sBAAsB,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB;EACxH,OAAOpD,QAAQ,CAAC;IACd,iBAAiB,EAAE;EACrB,CAAC,EAAE0B,UAAU,CAACO,IAAI,KAAK,IAAI,IAAI;IAC7B,iBAAiB,EAAE,MAAM;IACzB,gBAAgB,EAAE,UAAU;IAC5BoB,QAAQ,EAAEP,KAAK,CAACQ,IAAI,CAACD,QAAQ,CAACE;EAChC,CAAC,EAAE7B,UAAU,CAACO,IAAI,KAAK,IAAI,IAAI;IAC7B,iBAAiB,EAAE,SAAS;IAC5B,gBAAgB,EAAE,QAAQ;IAC1BoB,QAAQ,EAAEP,KAAK,CAACQ,IAAI,CAACD,QAAQ,CAACG;EAChC,CAAC,EAAE9B,UAAU,CAACO,IAAI,KAAK,IAAI,IAAI;IAC7B,iBAAiB,EAAE,QAAQ;IAC3B,gBAAgB,EAAE,UAAU;IAC5BoB,QAAQ,EAAEP,KAAK,CAACQ,IAAI,CAACD,QAAQ,CAACI;EAChC,CAAC,EAAE;IACDC,QAAQ,EAAEhC,UAAU,CAACiC,OAAO,GAAG,SAAS,GAAG,UAAU;IACrDC,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAEf,KAAK,CAACQ,IAAI,CAACO,UAAU,CAACC,IAAI;IACtCC,UAAU,EAAE,sBAAsB;IAClChC,KAAK,EAAEe,KAAK,CAACQ,IAAI,CAACU,OAAO,CAACC,IAAI,CAACC,OAAO;IACtC,CAAE,KAAInD,eAAe,CAACa,QAAS,EAAC,GAAG;MACjCG,KAAK,EAAE,CAACgB,qBAAqB,GAAGD,KAAK,CAACqB,QAAQ,CAACC,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,CAACpB,sBAAsB,GAAGD,qBAAqB,CAACrB,UAAU,CAACK,KAAK,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGiB,sBAAsB,CAACjB;IAChM;EACF,CAAC,EAAEL,UAAU,CAACG,WAAW,IAAI;IAC3BE,KAAK,EAAE,CAACkB,eAAe,GAAGH,KAAK,CAACqB,QAAQ,CAACzC,UAAU,CAACM,OAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,CAACkB,gBAAgB,GAAGD,eAAe,CAACvB,UAAU,CAACK,KAAK,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmB,gBAAgB,CAACnB,KAAK;IACjL,CAAE,KAAIhB,eAAe,CAACa,QAAS,EAAC,GAAG;MACjCG,KAAK,EAAE,CAACoB,gBAAgB,GAAGL,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,UAAS,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,CAACoB,gBAAgB,GAAGD,gBAAgB,CAACzB,UAAU,CAACK,KAAK,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqB,gBAAgB,CAACrB;IAC7L;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,MAAMsC,gBAAgB,GAAG1D,MAAM,CAAC,MAAM,EAAE;EACtC8B,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,UAAU;EAChBC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACT;AAC/C,CAAC,CAAC,CAAC,SAGG;EAAA,IAHF;IACFU,KAAK;IACLpB;EACF,CAAC;EACC,IAAI4C,gBAAgB,EAAEC,qBAAqB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB;EACjG,MAAMC,YAAY,GAAG,CAACL,gBAAgB,GAAGxB,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,EAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGsC,gBAAgB,CAAC5C,UAAU,CAACK,KAAK,CAAC;EACvI,OAAO,CAAC/B,QAAQ,CAAC;IACf4E,SAAS,EAAE,YAAY;IACvBC,YAAY,EAAE/B,KAAK,CAACQ,IAAI,CAACwB,MAAM,CAACC,EAAE;IAClCC,KAAK,EAAE,sBAAsB;IAC7BC,MAAM,EAAE,sBAAsB;IAC9BrB,OAAO,EAAE,aAAa;IACtBsB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE,CAAC;IACb;IACAC,UAAU,EAAE;EACd,CAAC,EAAE3D,UAAU,CAACG,WAAW,IAAI;IAC3B+B,OAAO,EAAE;EACX,CAAC,CAAC,EAAE,IAAI,CAAClC,UAAU,CAACG,WAAW,GAAG,CAAC7B,QAAQ,CAAC,CAAC,CAAC,EAAE2E,YAAY,EAAE;IAC5DW,eAAe,EAAE,CAACf,qBAAqB,GAAGI,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACW,eAAe,KAAK,IAAI,GAAGf,qBAAqB,GAAGzB,KAAK,CAACQ,IAAI,CAACU,OAAO,CAACuB,UAAU,CAACC;EAC1K,CAAC,CAAC,EAAE;IACF,SAAS,EAAE,CAAChB,gBAAgB,GAAG1B,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,OAAM,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGwC,gBAAgB,CAAC9C,UAAU,CAACK,KAAK;EACnI,CAAC,EAAE;IACD,UAAU,EAAE,CAAC0C,gBAAgB,GAAG3B,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,QAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGyC,gBAAgB,CAAC/C,UAAU,CAACK,KAAK;EACrI,CAAC,EAAE;IACD,CAAE,KAAIhB,eAAe,CAACa,QAAS,EAAC,GAAG,CAAC8C,gBAAgB,GAAG5B,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,UAAS,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG0C,gBAAgB,CAAChD,UAAU,CAACK,KAAK;EAC9J,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACX,CAAC,CAAC;AACF,MAAM0D,cAAc,GAAG9E,MAAM,CAAC,MAAM,EAAE;EACpC8B,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,QAAQ;EACdC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACR;AAC/C,CAAC,CAAC,CAAC,SAGG;EAAA,IAHF;IACFS,KAAK;IACLpB;EACF,CAAC;EACC,IAAIgE,gBAAgB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB;EAC7E,OAAO,CAAC;IACNhB,YAAY,EAAG,iCAAgCnD,UAAU,CAACiC,OAAO,GAAG,wCAAwC,GAAG,SAAU,GAAE;IAC3HD,QAAQ,EAAE,UAAU;IACpBoC,GAAG,EAAE,4CAA4C;IACjD;IACAC,IAAI,EAAE,4CAA4C;IAClDC,MAAM,EAAE,4CAA4C;IACpDC,KAAK,EAAE,4CAA4C;IACnDC,MAAM,EAAE,CAAC;IACT;IACA;IACAb,UAAU,EAAE,4GAA4G;IACxH,CAACvC,KAAK,CAACqD,KAAK,CAACC,QAAQ,GAAGtD,KAAK,CAACqD,KAAK,CAACE;EACtC,CAAC,EAAE,IAAI3E,UAAU,CAACG,WAAW,GAAG,CAAC,CAAC6D,gBAAgB,GAAG5C,KAAK,CAACqB,QAAQ,CAACzC,UAAU,CAACM,OAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG0D,gBAAgB,CAAChE,UAAU,CAACK,KAAK,CAAC,EAAE;IAC9I,SAAS,EAAE,CAAC4D,iBAAiB,GAAG7C,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,OAAM,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG2D,iBAAiB,CAACjE,UAAU,CAACK,KAAK;EACrI,CAAC,EAAE;IACD,UAAU,EAAE,CAAC6D,iBAAiB,GAAG9C,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,QAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4D,iBAAiB,CAAClE,UAAU,CAACK,KAAK;EACvI,CAAC,EAAE;IACD,CAAE,KAAIhB,eAAe,CAACa,QAAS,EAAC,GAAG,CAACiE,iBAAiB,GAAG/C,KAAK,CAACqB,QAAQ,CAAE,GAAEzC,UAAU,CAACM,OAAQ,UAAS,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG6D,iBAAiB,CAACnE,UAAU,CAACK,KAAK;EAChK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACX,CAAC,CAAC;AACF,MAAMuE,aAAa,GAAG3F,MAAM,CAAC,OAAO,EAAE;EACpC8B,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,OAAO;EACbC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACP;AAC/C,CAAC,CAAC,CAAC,OAAO;EACRiE,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACV9C,QAAQ,EAAE,UAAU;EACpBsB,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdwB,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AACH,MAAMC,aAAa,GAAG/F,MAAM,CAAC,OAAO,EAAE;EACpC8B,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,OAAO;EACbC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACN;AAC/C,CAAC,CAAC,CAAC;EAAA,IAAC;IACFb;EACF,CAAC;EAAA,OAAK1B,QAAQ,CAAC;IACb2G,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC,EAAElF,UAAU,CAACG,WAAW,GAAG;IAC1BqE,MAAM,EAAE,CAAC;IACT;IACAW,aAAa,EAAE,MAAM,CAAC;EACxB,CAAC,GAAG;IACFC,iBAAiB,EAAE;EACrB,CAAC,CAAC;AAAA,EAAC;AACH,MAAMC,kBAAkB,GAAG,aAAazF,IAAI,CAACL,SAAS,EAAE,CAAC,CAAC,CAAC;AAC3D,MAAM+F,wBAAwB,GAAG,aAAa1F,IAAI,CAACJ,iBAAiB,EAAE,CAAC,CAAC,CAAC;AACzE,MAAM+F,QAAQ,GAAG,aAAa/G,KAAK,CAACgH,UAAU,CAAC,SAASD,QAAQ,CAACE,OAAO,EAAEC,GAAG,EAAE;EAC7E,IAAIC,IAAI,EAAEC,iBAAiB,EAAEC,KAAK,EAAEC,aAAa,EAAEC,kBAAkB;EACrE,MAAM7E,KAAK,GAAGhC,aAAa,CAAC;IAC1BgC,KAAK,EAAEuE,OAAO;IACd1E,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;MACFd,OAAO,EAAE+F,WAAW;MACpBC,aAAa;MACbC,WAAW,GAAGb,kBAAkB;MAChCxE,KAAK;MACLsF,cAAc;MACdjG,QAAQ,EAAEkG,oBAAoB;MAC9BjG,WAAW,GAAG,KAAK;MACnB8B,OAAO;MACPoE,EAAE,EAAEC,UAAU;MACdC,aAAa,GAAG,KAAK;MACrBC,iBAAiB,GAAGlB,wBAAwB;MAC5CvE,IAAI;MACJ0F,MAAM;MACNC,QAAQ;MACRC,OAAO;MACPC,cAAc;MACdC,QAAQ;MACRC,QAAQ;MACRC,KAAK;MACL1G,KAAK,EAAE2G,SAAS;MAChB1G,OAAO,EAAE2G,WAAW;MACpB1G,IAAI,EAAE2G,QAAQ,GAAG;IACnB,CAAC,GAAGhG,KAAK;IACTiG,KAAK,GAAG9I,6BAA6B,CAAC6C,KAAK,EAAE3C,SAAS,CAAC;EACzD,MAAM6I,WAAW,GAAG5I,KAAK,CAAC6I,UAAU,CAAC3H,kBAAkB,CAAC;EACxD,MAAM4H,YAAY,GAAG,CAAC3B,IAAI,GAAG,CAACC,iBAAiB,GAAGH,OAAO,CAACvF,QAAQ,KAAK,IAAI,GAAG0F,iBAAiB,GAAGwB,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAClH,QAAQ,KAAK,IAAI,GAAGyF,IAAI,GAAGS,oBAAoB;EAC5L,MAAM7F,IAAI,GAAG,CAACsF,KAAK,GAAG,CAACC,aAAa,GAAGL,OAAO,CAAClF,IAAI,KAAK,IAAI,GAAGuF,aAAa,GAAGsB,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC7G,IAAI,KAAK,IAAI,GAAGsF,KAAK,GAAGqB,QAAQ;EAC1J,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAMC,cAAc,GAAGN,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACM,cAAc;IAChF;IACAlJ,KAAK,CAACmJ,SAAS,CAAC,MAAM;MACpB,IAAID,cAAc,EAAE;QAClB,OAAOA,cAAc,EAAE;MACzB;MACA,OAAOE,SAAS;IAClB,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EACtB;EACA,MAAMrB,EAAE,GAAG1H,KAAK,CAAC2H,UAAU,IAAI,IAAI,GAAGA,UAAU,GAAGc,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACS,OAAO,CAAC;EACtG,MAAMC,gBAAgB,GAAG;IACvB7H,OAAO,EAAE+F,WAAW;IACpBG,cAAc;IACdjG,QAAQ,EAAEoH,YAAY;IACtBb,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC;EACF,CAAC;EACD,MAAM;IACJmB,aAAa;IACb9H,OAAO;IACPC,QAAQ;IACRE;EACF,CAAC,GAAGpB,SAAS,CAAC8I,gBAAgB,CAAC;EAC/B,MAAME,gBAAgB,GAAG/H,OAAO,IAAIsG,aAAa;EACjD,MAAM0B,aAAa,GAAGhB,WAAW,IAAI,OAAO;EAC5C,MAAMiB,eAAe,GAAGjB,WAAW,IAAI,UAAU;EACjD,MAAM3G,OAAO,GAAG0H,gBAAgB,GAAGC,aAAa,GAAGC,eAAe;EAClE,MAAM;IACJC;EACF,CAAC,GAAGhJ,iBAAiB,CAACmB,OAAO,CAAC;EAC9B,MAAMD,KAAK,GAAG8H,QAAQ,CAAC1C,OAAO,CAACpF,KAAK,EAAE+G,WAAW,IAAI,IAAI,IAAIA,WAAW,CAACgB,KAAK,GAAG,QAAQ,GAAG,CAACrC,kBAAkB,GAAGqB,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC/G,KAAK,KAAK,IAAI,GAAG0F,kBAAkB,GAAGiB,SAAS,CAAC;EAC7M,MAAMqB,WAAW,GAAGhI,KAAK,IAAI,SAAS;EACtC,MAAMiI,aAAa,GAAGjI,KAAK,IAAI,SAAS;EACxC,MAAML,UAAU,GAAG1B,QAAQ,CAAC,CAAC,CAAC,EAAE4C,KAAK,EAAE;IACrCjB,OAAO;IACPC,QAAQ;IACRC,WAAW;IACX8B,OAAO;IACP7B,YAAY;IACZC,KAAK,EAAE2H,gBAAgB,GAAGK,WAAW,GAAGC,aAAa;IACrDhI,OAAO;IACPC;EACF,CAAC,CAAC;EACF,MAAMgI,OAAO,GAAGxI,iBAAiB,CAACC,UAAU,CAAC;EAC7C,MAAM,CAACwI,QAAQ,EAAEC,SAAS,CAAC,GAAGrJ,OAAO,CAAC,MAAM,EAAE;IAC5CsG,GAAG;IACHgD,SAAS,EAAEH,OAAO,CAAC9H,IAAI;IACvBkI,WAAW,EAAE7H,YAAY;IACzB8H,sBAAsB,EAAEzB,KAAK;IAC7BnH;EACF,CAAC,CAAC;EACF,MAAM,CAAC6I,YAAY,EAAEC,aAAa,CAAC,GAAG1J,OAAO,CAAC,UAAU,EAAE;IACxDsJ,SAAS,EAAEH,OAAO,CAAC7H,QAAQ;IAC3BiI,WAAW,EAAEhG,gBAAgB;IAC7BiG,sBAAsB,EAAEzB,KAAK;IAC7BnH;EACF,CAAC,CAAC;EACF,MAAM,CAAC+I,UAAU,EAAEC,WAAW,CAAC,GAAG5J,OAAO,CAAC,QAAQ,EAAE;IAClDsJ,SAAS,EAAEH,OAAO,CAAC5H,MAAM;IACzBgI,WAAW,EAAE5E,cAAc;IAC3B6E,sBAAsB,EAAEzB,KAAK;IAC7BnH;EACF,CAAC,CAAC;EACF,MAAM,CAACiJ,SAAS,EAAEC,UAAU,CAAC,GAAG9J,OAAO,CAAC,OAAO,EAAE;IAC/C+J,eAAe,EAAE7K,QAAQ,CAAC;MACxB+H,EAAE;MACFtF,IAAI;MACJgG,KAAK;MACLF,QAAQ;MACRC,QAAQ,EAAEA,QAAQ,IAAI,IAAI,GAAGA,QAAQ,GAAGM,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACN,QAAQ;MAC3F,kBAAkB,EAAEM,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC,kBAAkB;IACnF,CAAC,EAAEb,aAAa,IAAI;MAClB;MACA,cAAc,EAAE;IAClB,CAAC,CAAC;IACFmC,SAAS,EAAEH,OAAO,CAAC3H,KAAK;IACxB+H,WAAW,EAAE/D,aAAa;IAC1BgE,sBAAsB,EAAEzB,KAAK;IAC7BiC,YAAY,EAAErB,aAAa;IAC3B/H;EACF,CAAC,CAAC;EACF,MAAM,CAACqJ,SAAS,EAAEC,UAAU,CAAC,GAAGlK,OAAO,CAAC,OAAO,EAAE;IAC/C+J,eAAe,EAAE;MACftB,OAAO,EAAExB;IACX,CAAC;IACDqC,SAAS,EAAEH,OAAO,CAAC1H,KAAK;IACxB8H,WAAW,EAAE3D,aAAa;IAC1B4D,sBAAsB,EAAEzB,KAAK;IAC7BnH;EACF,CAAC,CAAC;EACF,OAAO,aAAaF,KAAK,CAAC0I,QAAQ,EAAElK,QAAQ,CAAC,CAAC,CAAC,EAAEmK,SAAS,EAAE;IAC1Dc,QAAQ,EAAE,CAAC,aAAazJ,KAAK,CAAC+I,YAAY,EAAEvK,QAAQ,CAAC,CAAC,CAAC,EAAEwK,aAAa,EAAE;MACtES,QAAQ,EAAE,CAAC,aAAa3J,IAAI,CAACmJ,UAAU,EAAEzK,QAAQ,CAAC,CAAC,CAAC,EAAE0K,WAAW,EAAE;QACjEO,QAAQ,EAAE,aAAa3J,IAAI,CAACqJ,SAAS,EAAE3K,QAAQ,CAAC,CAAC,CAAC,EAAE4K,UAAU,CAAC;MACjE,CAAC,CAAC,CAAC,EAAE3C,aAAa,IAAI,CAACtG,OAAO,IAAI,CAACE,WAAW,IAAIqG,iBAAiB,EAAEvG,OAAO,IAAI,CAACE,WAAW,IAAI+F,WAAW,EAAE,CAACjG,OAAO,IAAI,CAACE,WAAW,IAAI,CAACoG,aAAa,IAAIN,aAAa;IAC1K,CAAC,CAAC,CAAC,EAAEpF,KAAK,IAAI,aAAajB,IAAI,CAACH,iBAAiB,CAAC+J,QAAQ,EAAE;MAC1DzC,KAAK,EAAE,IAAI;MACXwC,QAAQ,EAAE,aAAa3J,IAAI,CAACyJ,SAAS,EAAE/K,QAAQ,CAAC,CAAC,CAAC,EAAEgL,UAAU,EAAE;QAC9DC,QAAQ,EAAE1I;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF0G,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlC,QAAQ,CAACkE,SAAS,CAAC,yBAAyB;EAClF;EACA;EACA;EACA;EACA;AACF;AACA;EACExJ,OAAO,EAAExB,SAAS,CAACiL,IAAI;EACvB;AACF;AACA;AACA;EACExD,WAAW,EAAEzH,SAAS,CAACkL,IAAI;EAC3B;AACF;AACA;EACEJ,QAAQ,EAAE9K,SAAS,CAACkL,IAAI;EACxB;AACF;AACA;EACEjB,SAAS,EAAEjK,SAAS,CAACmL,MAAM;EAC3B;AACF;AACA;AACA;EACEvJ,KAAK,EAAE5B,SAAS,CAAC,sCAAsCoL,SAAS,CAAC,CAACpL,SAAS,CAACqL,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,EAAErL,SAAS,CAACmL,MAAM,CAAC,CAAC;EAC1J;AACF;AACA;EACEzD,cAAc,EAAE1H,SAAS,CAACiL,IAAI;EAC9B;AACF;AACA;EACExJ,QAAQ,EAAEzB,SAAS,CAACiL,IAAI;EACxB;AACF;AACA;AACA;EACEvJ,WAAW,EAAE1B,SAAS,CAACiL,IAAI;EAC3B;AACF;AACA;EACErD,EAAE,EAAE5H,SAAS,CAACmL,MAAM;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;EACErD,aAAa,EAAE9H,SAAS,CAACiL,IAAI;EAC7B;AACF;AACA;AACA;EACElD,iBAAiB,EAAE/H,SAAS,CAACkL,IAAI;EACjC;AACF;AACA;EACE9I,KAAK,EAAEpC,SAAS,CAACkL,IAAI;EACrB;AACF;AACA;EACE5I,IAAI,EAAEtC,SAAS,CAACmL,MAAM;EACtB;AACF;AACA;EACEnD,MAAM,EAAEhI,SAAS,CAACsL,IAAI;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;EACErD,QAAQ,EAAEjI,SAAS,CAACsL,IAAI;EACxB;AACF;AACA;EACEpD,OAAO,EAAElI,SAAS,CAACsL,IAAI;EACvB;AACF;AACA;EACEnD,cAAc,EAAEnI,SAAS,CAACsL,IAAI;EAC9B;AACF;AACA;AACA;AACA;EACE9H,OAAO,EAAExD,SAAS,CAACiL,IAAI;EACvB;AACF;AACA;EACE7C,QAAQ,EAAEpI,SAAS,CAACiL,IAAI;EACxB;AACF;AACA;EACE5C,QAAQ,EAAErI,SAAS,CAACiL,IAAI;EACxB;AACF;AACA;AACA;EACEnJ,IAAI,EAAE9B,SAAS,CAAC,sCAAsCoL,SAAS,CAAC,CAACpL,SAAS,CAACqL,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAErL,SAAS,CAACmL,MAAM,CAAC,CAAC;EACxH;AACF;AACA;EACEI,EAAE,EAAEvL,SAAS,CAACoL,SAAS,CAAC,CAACpL,SAAS,CAACwL,OAAO,CAACxL,SAAS,CAACoL,SAAS,CAAC,CAACpL,SAAS,CAACsL,IAAI,EAAEtL,SAAS,CAACyL,MAAM,EAAEzL,SAAS,CAACiL,IAAI,CAAC,CAAC,CAAC,EAAEjL,SAAS,CAACsL,IAAI,EAAEtL,SAAS,CAACyL,MAAM,CAAC,CAAC;EACvJ;AACF;AACA;EACEjE,aAAa,EAAExH,SAAS,CAACkL,IAAI;EAC7B;AACF;AACA;AACA;EACE5C,KAAK,EAAEtI,SAAS,CAACoL,SAAS,CAAC,CAACpL,SAAS,CAACwL,OAAO,CAACxL,SAAS,CAACmL,MAAM,CAAC,EAAEnL,SAAS,CAAC0L,MAAM,EAAE1L,SAAS,CAACmL,MAAM,CAAC,CAAC;EACrG;AACF;AACA;AACA;EACEtJ,OAAO,EAAE7B,SAAS,CAAC,sCAAsCoL,SAAS,CAAC,CAACpL,SAAS,CAACqL,KAAK,CAAC,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,EAAErL,SAAS,CAACmL,MAAM,CAAC;AAChJ,CAAC,GAAG,KAAK,CAAC;AACV,eAAerE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}