{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"color\", \"variant\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { StyledListItemButton } from '../ListItemButton/ListItemButton';\nimport { styled, useThemeProps } from '../styles';\nimport autocompleteOptionClasses, { getAutocompleteOptionUtilityClass } from './autocompleteOptionClasses';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`]\n  };\n  return composeClasses(slots, getAutocompleteOptionUtilityClass, {});\n};\nexport const StyledAutocompleteOption = styled(StyledListItemButton)(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  var _theme$variants, _theme$variants$soft, _theme$variants$soft2, _theme$variants$soft3, _theme$variants$soft4, _theme$variants2, _theme$variants3;\n  return {\n    '&:not(:hover)': {\n      transition: 'none' // prevent flicker when using keyboard arrows to move between options\n    },\n\n    '&[aria-disabled=\"true\"]': (_theme$variants = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants[ownerState.color],\n    '&[aria-selected=\"true\"]': {\n      color: (_theme$variants$soft = theme.variants.soft) == null ? void 0 : (_theme$variants$soft2 = _theme$variants$soft[ownerState.color === 'context' ? 'context' : 'primary']) == null ? void 0 : _theme$variants$soft2.color,\n      backgroundColor: (_theme$variants$soft3 = theme.variants.soft) == null ? void 0 : (_theme$variants$soft4 = _theme$variants$soft3[ownerState.color === 'context' ? 'context' : 'primary']) == null ? void 0 : _theme$variants$soft4.backgroundColor,\n      fontWeight: theme.vars.fontWeight.md\n    },\n    [`&.${autocompleteOptionClasses.focused}:not([aria-selected=\"true\"]):not(:hover)`]: {\n      // create the focused style similar to the hover state\n      backgroundColor: (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : (_theme$variants3 = _theme$variants2[ownerState.color]) == null ? void 0 : _theme$variants3.backgroundColor\n    }\n  };\n});\nconst AutocompleteOptionRoot = styled(StyledAutocompleteOption, {\n  name: 'JoyAutocompleteOption',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst AutocompleteOption = /*#__PURE__*/React.forwardRef(function AutocompleteOption(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAutocompleteOption'\n  });\n  const {\n      children,\n      component = 'li',\n      color: colorProp = 'neutral',\n      variant = 'plain',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, colorProp);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AutocompleteOptionRoot, _extends({\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    role: \"option\"\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AutocompleteOption.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'light', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default AutocompleteOption;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_capitalize","capitalize","composeClasses","StyledListItemButton","styled","useThemeProps","autocompleteOptionClasses","getAutocompleteOptionUtilityClass","useColorInversion","jsx","_jsx","useUtilityClasses","ownerState","color","variant","slots","root","StyledAutocompleteOption","theme","_theme$variants","_theme$variants$soft","_theme$variants$soft2","_theme$variants$soft3","_theme$variants$soft4","_theme$variants2","_theme$variants3","transition","variants","soft","backgroundColor","fontWeight","vars","md","focused","AutocompleteOptionRoot","name","slot","overridesResolver","props","styles","AutocompleteOption","forwardRef","inProps","ref","children","component","colorProp","className","other","getColor","classes","as","role","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","elementType","sx","arrayOf","func","object","bool"],"sources":["/Users/martyna.kiljan/Documents/projects/crrud/crud-app/node_modules/@mui/joy/AutocompleteOption/AutocompleteOption.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"color\", \"variant\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { StyledListItemButton } from '../ListItemButton/ListItemButton';\nimport { styled, useThemeProps } from '../styles';\nimport autocompleteOptionClasses, { getAutocompleteOptionUtilityClass } from './autocompleteOptionClasses';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`]\n  };\n  return composeClasses(slots, getAutocompleteOptionUtilityClass, {});\n};\nexport const StyledAutocompleteOption = styled(StyledListItemButton)(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants, _theme$variants$soft, _theme$variants$soft2, _theme$variants$soft3, _theme$variants$soft4, _theme$variants2, _theme$variants3;\n  return {\n    '&:not(:hover)': {\n      transition: 'none' // prevent flicker when using keyboard arrows to move between options\n    },\n\n    '&[aria-disabled=\"true\"]': (_theme$variants = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants[ownerState.color],\n    '&[aria-selected=\"true\"]': {\n      color: (_theme$variants$soft = theme.variants.soft) == null ? void 0 : (_theme$variants$soft2 = _theme$variants$soft[ownerState.color === 'context' ? 'context' : 'primary']) == null ? void 0 : _theme$variants$soft2.color,\n      backgroundColor: (_theme$variants$soft3 = theme.variants.soft) == null ? void 0 : (_theme$variants$soft4 = _theme$variants$soft3[ownerState.color === 'context' ? 'context' : 'primary']) == null ? void 0 : _theme$variants$soft4.backgroundColor,\n      fontWeight: theme.vars.fontWeight.md\n    },\n    [`&.${autocompleteOptionClasses.focused}:not([aria-selected=\"true\"]):not(:hover)`]: {\n      // create the focused style similar to the hover state\n      backgroundColor: (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : (_theme$variants3 = _theme$variants2[ownerState.color]) == null ? void 0 : _theme$variants3.backgroundColor\n    }\n  };\n});\nconst AutocompleteOptionRoot = styled(StyledAutocompleteOption, {\n  name: 'JoyAutocompleteOption',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst AutocompleteOption = /*#__PURE__*/React.forwardRef(function AutocompleteOption(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAutocompleteOption'\n  });\n  const {\n      children,\n      component = 'li',\n      color: colorProp = 'neutral',\n      variant = 'plain',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, colorProp);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AutocompleteOptionRoot, _extends({\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    role: \"option\"\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AutocompleteOption.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'light', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default AutocompleteOption;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}