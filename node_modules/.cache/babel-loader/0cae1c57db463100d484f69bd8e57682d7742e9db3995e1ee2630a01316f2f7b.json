{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { getFormHelperTextUtilityClass } from './formHelperTextClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport formLabelClasses from '../FormLabel/formLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClass, {});\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'JoyFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    fontFamily: theme.vars.fontFamily.body,\n    fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,\n    lineHeight: theme.vars.lineHeight.sm,\n    color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,\n    margin: 'var(--FormHelperText-margin, 0px)',\n    [`.${formLabelClasses.root} + &`]: {\n      '--FormHelperText-margin': '0px' // remove the margin if the helper text is next to the form label.\n    }\n  };\n});\n\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormHelperText'\n  });\n  const {\n      children,\n      component\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, ref);\n  const formControl = React.useContext(FormControlContext);\n  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;\n  React.useEffect(() => {\n    setHelperText == null ? void 0 : setHelperText(rootRef.current);\n    return () => {\n      setHelperText == null ? void 0 : setHelperText(null);\n    };\n  }, [setHelperText]);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses();\n  const rootProps = useSlotProps({\n    elementType: FormHelperTextRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref: handleRef,\n      as: component,\n      id: formControl == null ? void 0 : formControl['aria-describedby']\n    },\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormHelperText;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","useSlotProps","styled","useThemeProps","getFormHelperTextUtilityClass","FormControlContext","formLabelClasses","jsx","_jsx","useUtilityClasses","slots","root","FormHelperTextRoot","name","slot","overridesResolver","props","styles","theme","display","alignItems","fontFamily","vars","body","fontSize","sm","lineHeight","color","palette","text","secondary","margin","FormHelperText","forwardRef","inProps","ref","children","component","other","rootRef","useRef","handleRef","formControl","useContext","setHelperText","useEffect","current","ownerState","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","id","className","process","env","NODE_ENV","propTypes","node","object","sx","oneOfType","arrayOf","func","bool"],"sources":["/Users/martyna.kiljan/Documents/projects/crrud/crud-app/node_modules/@mui/joy/FormHelperText/FormHelperText.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { getFormHelperTextUtilityClass } from './formHelperTextClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport formLabelClasses from '../FormLabel/formLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClass, {});\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'JoyFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  fontFamily: theme.vars.fontFamily.body,\n  fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,\n  lineHeight: theme.vars.lineHeight.sm,\n  color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,\n  margin: 'var(--FormHelperText-margin, 0px)',\n  [`.${formLabelClasses.root} + &`]: {\n    '--FormHelperText-margin': '0px' // remove the margin if the helper text is next to the form label.\n  }\n}));\n\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormHelperText'\n  });\n  const {\n      children,\n      component\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, ref);\n  const formControl = React.useContext(FormControlContext);\n  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;\n  React.useEffect(() => {\n    setHelperText == null ? void 0 : setHelperText(rootRef.current);\n    return () => {\n      setHelperText == null ? void 0 : setHelperText(null);\n    };\n  }, [setHelperText]);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses();\n  const rootProps = useSlotProps({\n    elementType: FormHelperTextRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref: handleRef,\n      as: component,\n      id: formControl == null ? void 0 : formControl['aria-describedby']\n    },\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormHelperText;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}